# How to connect Python to Sharepoint365 via proxy server
# Need to set proxy to ClientContext library

import os
import warnings
import contextlib
import requests
from urllib3.exceptions import InsecureRequestWarning
from office365.sharepoint.client_context import ClientContext

# Set global proxy settings
proxy = 'http://{your proxy url}:{your proxy port no}'
os.environ['http_proxy'] = proxy 
os.environ['HTTP_PROXY'] = proxy
os.environ['https_proxy'] = proxy
os.environ['HTTPS_PROXY'] = proxy

# Set a context to force no SSL verification
old_merge_environment_settings = requests.Session.merge_environment_settings

@contextlib.contextmanager
def no_ssl_verification():
    opened_adapters = set()

    def merge_environment_settings(self, url, proxies, stream, verify, cert):
        # Verification happens only once per connection so we need to close
        # all the opened adapters once we're done. Otherwise, the effects of
        # verify=False persist beyond the end of this context manager.
        opened_adapters.add(self.get_adapter(url))

        settings = old_merge_environment_settings(self, url, proxies, stream, verify, cert)
        settings['verify'] = False

        return settings

    requests.Session.merge_environment_settings = merge_environment_settings

    try:
        with warnings.catch_warnings():
            warnings.simplefilter('ignore', InsecureRequestWarning)
            yield
    finally:
        requests.Session.merge_environment_settings = old_merge_environment_settings

        for adapter in opened_adapters:
            try:
                adapter.close()
            except:
                pass

# wrote all code within the context
with no_ssl_verification():
    site_url = "https://{your sharepoint sites url}"
    ctx = ClientContext(site_url).with_user_credentials('{your sharepoint user name}', '{your sharepoint password}')

    web = ctx.web
    ctx.load(web)
    ctx.execute_query()
    print("Web title: {0}".format(web.properties['Title']))
